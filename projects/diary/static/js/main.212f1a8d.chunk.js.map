{"version":3,"sources":["UI/Page/index.js","UI/Header/index.js","UI/Add/index.js","UI/ListItem/index.js","components/Home/index.js","UI/TextField/index.js","UI/Button/index.js","components/AddProblem/index.js","redux/actions/EditMindAction.js","components/JournalErrors/index.js","components/AddLogicError/index.js","redux/actions/AddLogicErrorAction.js","serviceWorker.js","redux/reducers/EditMindReducer.js","redux/reducers/AddLogicErrorReducer.js","redux/reducers/index.js","redux/store.js","index.js","App.js"],"names":["Home","react_default","a","createElement","className","this","props","children","Component","Header","_this$props","h1","history","location","pathname","onClick","goBack","IconButton","aria-label","size","ArrowDownward_default","fontSize","Add","concat","Fab","color","Add_default","ListItem","react_router_dom","to","_this","console","log","Header_Header","Object","assign","Page_Home","problems","map","item","ListItem_ListItem","name","Add_Add","connect","state","EditMindReducer","Text","tipeText","text","type","target","value","TextField","id","label","multiline","rowsMax","onChange","margin","style","width","variant","Button","EditMind","problem","setState","defineProperty","submit","e","preventDefault","addProblem","onSubmit","TextField_Text","Button_Home","content","payload","JournalErrors","match","params","addLogicErrorReducer","logicError","solution","addLogicError","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","logicErrors","combineReducers","arguments","length","undefined","action","objectSpread","toConsumableArray","createStore","rootReducer","ReactDOM","render","es","store","react_router","exact","path","component","AddLogicError","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.212f1a8d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.sass';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='page'>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './style.sass';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const {h1, history, location} = this.props;\r\n\r\n        return (\r\n            <div className='header'>\r\n                {location.pathname !== '/' && <div className=\"header__back\" onClick={() => history.goBack()}>\r\n                    <IconButton aria-label=\"Delete\" size=\"medium\">\r\n                        <ArrowDownwardIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                </div>}\r\n\r\n                <div className=\"header__text\">{h1}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport './style.sass';\r\n\r\nexport default class Add extends Component {\r\n    render() {\r\n        const { className } = this.props;\r\n\r\n        return (\r\n            <div className={`add ${className}`}>\r\n                <Fab color=\"primary\" aria-label=\"Add\">\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './style.sass';\r\n\r\nexport default class ListItem extends Component {\r\n    render() {\r\n        return (\r\n            <Link to={`${this.props.location}${this.props.children}`} className='list-item'>\r\n                {this.props.children}\r\n            </Link>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './style.sass';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Page from '../../UI/Page';\r\nimport Header from '../../UI/Header';\r\nimport Add from '../../UI/Add';\r\nimport ListItem from '../../UI/ListItem';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n\r\n        console.log(this.props)\r\n        return (\r\n            <div className='home'>\r\n                <Header\r\n                    h1='Главная'\r\n                    {...this.props}\r\n                />\r\n                <Page>\r\n                    {this.props.problems.map((item) => (\r\n                        <ListItem location={this.props.location.pathname}>{item.name}</ListItem>\r\n                    ))}\r\n                </Page>\r\n                <Link to=\"/edit-mind\"><Add /></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { EditMindReducer } = state;\r\n    return {problems: EditMindReducer.problems}\r\n};\r\n// export default TodoList;\r\nexport default connect(mapStateToProps)(Home);","import React, {Component} from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class Text extends Component {\r\n\r\n    tipeText = (text) => {\r\n        this.props.tipeText(this.props.type, text.target.value)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='text-field'>\r\n                <TextField\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label={this.props.label}\r\n                    multiline\r\n                    rowsMax=\"10\"\r\n                    value={this.props.value}\r\n                    onChange={this.tipeText}\r\n                    margin=\"normal\"\r\n                    style={{\r\n                        width: '100%'\r\n                    }}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className='button'>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{width: '100%'}}\r\n                    type='submit'\r\n                >\r\n                    {this.props.children}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Page from '../../UI/Page';\r\nimport Header from '../../UI/Header';\r\nimport TextField from '../../UI/TextField';\r\nimport Button from '../../UI/Button';\r\n\r\nimport { addProblem } from '../../redux/actions/EditMindAction';\r\n\r\nclass EditMind extends Component {\r\n\r\n    state = {\r\n        problem: ''\r\n    };\r\n\r\n    tipeText = (type, text) => {\r\n        this.setState({\r\n            [type]: text\r\n        })\r\n    };\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addProblem(this.state);\r\n        this.props.history.goBack()\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='edit-mind'>\r\n                <Header\r\n                    h1='Добавить проблему'\r\n                    {...this.props}\r\n                />\r\n                <Page>\r\n                    <form onSubmit={this.submit}>\r\n                        <TextField\r\n                            tipeText={this.tipeText}\r\n                            value={this.state.problem}\r\n                            type='problem'\r\n                            label=\"Введите проблему\"\r\n                        />\r\n                        <Button>Добавить</Button>\r\n                    </form>\r\n                </Page>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {addProblem}\r\n)(EditMind);\r\n","export const addProblem = content => ({\r\n    type: 'ADD_PROBLEM',\r\n    payload: {\r\n        problem: {name: content.problem}\r\n    }\r\n});","import React, {Component} from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Page from '../../UI/Page';\r\nimport Header from '../../UI/Header';\r\nimport Add from '../../UI/Add';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass JournalErrors extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='journal-errors'>\r\n                <Header\r\n                    h1='Журнал ошибок'\r\n                    {...this.props}\r\n                />\r\n                <Page>\r\n                    <h2>{this.props.match.params.name}</h2>\r\n                    <p>Тут пока нет ни одной записи</p>\r\n                </Page>\r\n                <Link to={this.props.location.pathname + '/add-logic-error'}><Add /></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { addLogicErrorReducer } = state;\r\n    console.log(addLogicErrorReducer)\r\n};\r\n// export default TodoList;\r\nexport default connect(mapStateToProps)(JournalErrors);","import React, {Component} from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Page from '../../UI/Page';\r\nimport Header from '../../UI/Header';\r\nimport TextField from '../../UI/TextField';\r\nimport Button from '../../UI/Button';\r\n\r\nimport { addLogicError } from '../../redux/actions/AddLogicErrorAction';\r\n\r\nclass EditMind extends Component {\r\n\r\n    state = {\r\n        logicError: '',\r\n        solution: ''\r\n    };\r\n\r\n    tipeText = (type, text) => {\r\n        this.setState({\r\n            [type]: text\r\n        })\r\n    };\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addLogicError(this.state);\r\n        this.props.history.goBack()\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='edit-mind'>\r\n                <Header\r\n                    h1='Добавить логическую ошибку'\r\n                    {...this.props}\r\n                />\r\n                <Page>\r\n                    <form onSubmit={this.submit}>\r\n                        <TextField\r\n                            tipeText={this.tipeText}\r\n                            value={this.state.logicError}\r\n                            type='logicError'\r\n                            label=\"Логическая ошибка\"\r\n                        />\r\n                        <TextField\r\n                            tipeText={this.tipeText}\r\n                            value={this.state.solution}\r\n                            type='solution'\r\n                            label=\"Адекватная оценка\"\r\n                        />\r\n                        <Button>Добавить</Button>\r\n                    </form>\r\n                </Page>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {addLogicError}\r\n)(EditMind);","export const addLogicError = content => ({\r\n    type: 'ADD_LOGIC_ERROR',\r\n    payload: {\r\n        logicError: content\r\n    }\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    problems: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_PROBLEM': {\r\n            const { problem } = action.payload;\r\n            return {\r\n                ...state,\r\n                problems: [...state.problems, problem]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    logicErrors: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_LOGIC_ERROR': {\r\n            const { logicError } = action.payload;\r\n            console.log(logicError)\r\n            return {\r\n                ...state,\r\n                logicErrors: [...state.logicErrors, logicError]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport EditMindReducer from './EditMindReducer'\r\nimport addLogicErrorReducer from './AddLogicErrorReducer'\r\n\r\nexport default combineReducers({\r\n    EditMindReducer,\r\n    addLogicErrorReducer\r\n});","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './style.sass';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home'\nimport EditMind from './components/AddProblem'\nimport JournalErrors from './components/JournalErrors'\nimport AddLogicError from './components/AddLogicError'\n\nexport default () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/:name/add-logic-error\" component={AddLogicError} />\n\n        <Route exact path=\"/edit-mind\" component={EditMind} />\n\n        <Route path=\"/:name\" component={JournalErrors} />\n\n    </Switch>\n)\n"],"sourceRoot":""}